"""
–û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
"""
import streamlit as st
from config import APP_CONFIG
from state.session import state
from components.navigation import navigation_buttons, sidebar_navigation
from components.auth import show_auth_form, show_logout_button, is_authenticated
from steps import step_upload, step_preprocessing, step_transformation, step_forecasting
from components.forecasting.model_registration import register_models
import uuid

def init_app():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    st.set_page_config(
        page_title=APP_CONFIG['title'],
        page_icon=APP_CONFIG['icon'],
        layout=APP_CONFIG['layout'],
        initial_sidebar_state=APP_CONFIG['initial_sidebar_state']
    )
    # Register models
    register_models()

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º session_id, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    if "session_id" not in st.session_state:
        st.session_state["session_id"] = str(uuid.uuid4())
    
    # –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞—Ö–æ–¥–µ (–Ω–µ—Ç —à–∞–≥–∞ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω)
    if not is_authenticated() and "just_reset" not in st.session_state:
        state.reset()
        st.session_state["just_reset"] = True
    
    # Initialize app
    init_app()
    
    # Show auth form in sidebar if not authenticated
    with st.sidebar:
        if not is_authenticated():
            with st.expander("üîê –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è", expanded=False):
                show_auth_form()
        else:
            show_logout_button()
    
    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑ Supabase —Ç–æ–ª—å–∫–æ –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    if is_authenticated():
        state.restore_from_supabase()
    
    sidebar_navigation()
    st.title("üìä –ê–Ω–∞–ª–∏–∑ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ä—è–¥–æ–≤")
    navigation_buttons()
    
    if state.get('step') == 1:
        st.subheader("–®–∞–≥ 1. –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö")
        step_upload.run_step()
    elif state.get('step') == 2:
        step_preprocessing.run_step()
    elif state.get('step') == 3:
        step_transformation.run_step()
    elif state.get('step') == 4:
        step_forecasting.run_step()
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ Supabase —Ç–æ–ª—å–∫–æ –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    if is_authenticated():
        state.save_to_supabase()

if __name__ == "__main__":
    main()